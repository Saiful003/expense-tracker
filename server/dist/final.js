(()=>{var e={68:(e,t,s)=>{const a=s(339),{monthArr:n,groupByYear:r,matchCurrentYear:o,unwindItemsArr:i,matchUser:c}=s(968);e.exports=async(e,t)=>{const s=await a.aggregate([c(e),r,o,i,{$group:{_id:{month:"$items.month.monthName",day:"$items.day"},items:{$push:{type:"$items.type",amount:"$items.amount",day:"$items.day",month:"$items.month.monthName"}}}},{$addFields:{results:{$reduce:{input:"$items",initialValue:{income:0,expense:0,dailyTotalTransactions:0,day:null,month:null},in:{$cond:{if:{$eq:["$$this.type","income"]},then:{$mergeObjects:["$$value",{dailyTotalTransactions:{$add:["$$value.dailyTotalTransactions",1]},day:"$$this.day",month:"$$this.month"},{income:{$add:["$$value.income","$$this.amount"]}}]},else:{$mergeObjects:["$$value",{dailyTotalTransactions:{$add:["$$value.dailyTotalTransactions",1]},day:"$$this.day",month:"$$this.month"},{expense:{$add:["$$value.expense","$$this.amount"]}}]}}}}}}},{$group:{_id:"$_id.month",items:{$push:"$results"}}},{$match:{_id:t}},{$project:{_id:0,items:1}}]);if(0!==s.length){const[{items:e}]=s;return e.sort(((e,t)=>e.day-t.day)),e}return s}},968:(e,t,s)=>{const a=s(37),n=[{monthName:"Jan",monthIndex:0},{monthName:"Feb",monthIndex:1},{monthName:"Mar",monthIndex:2},{monthName:"Apr",monthIndex:3},{monthName:"May",monthIndex:4},{monthName:"Jun",monthIndex:5},{monthName:"Jul",monthIndex:6},{monthName:"Aug",monthIndex:7},{monthName:"Sep",monthIndex:8},{monthName:"Oct",monthIndex:9},{monthName:"Nov",monthIndex:10},{monthName:"Dec",monthIndex:11}],r={$group:{_id:{$year:"$createdAt"},items:{$push:{type:"$type",year:{$year:"$createdAt"},amount:{$toInt:"$amount"},creator:"$creator",day:{$dayOfMonth:"$createdAt"},month:{$arrayElemAt:[n,{$subtract:[{$month:"$createdAt"},1]}]}}}}},o={$match:{_id:(new Date).getFullYear()}};e.exports={groupByYear:r,monthArr:n,matchCurrentYear:o,unwindItemsArr:{$unwind:"$items"},matchUser:e=>({$match:{creator:new a.Types.ObjectId(e)}})}},155:(e,t,s)=>{const a=s(339),{groupByYear:n,matchCurrentYear:r,unwindItemsArr:o,matchUser:i}=s(968);e.exports=async e=>await a.aggregate([i(e),n,r,o,{$group:{_id:"$items.month",items:{$push:"$items"}}},{$addFields:{results:{$reduce:{input:"$items",initialValue:{income:0,expense:0,info:{}},in:{$cond:{if:{$eq:["$$this.type","income"]},then:{$mergeObjects:["$$value",{info:{year:"$$this.year",userId:"$$this.creator",currency:"BDT"}},{income:{$add:["$$value.income","$$this.amount"]}}]},else:{$mergeObjects:["$$value",{info:{year:"$$this.year",userId:"$$this.creator",currency:"BDT"}},{expense:{$add:["$$value.expense","$$this.amount"]}}]}}}}}}},{$project:{_id:0,monthName:"$_id.monthName",monthIndex:"$_id.monthIndex",results:1}},{$sort:{monthIndex:1}},{$replaceRoot:{newRoot:{$mergeObjects:[{month:"$monthName"},"$results"]}}}])},442:(e,t,s)=>{const a=s(37);e.exports=async()=>{try{await a.connect(process.env.DATABASE_URL),console.log(`DB connection successful! at ${(new Date).toLocaleString()}`)}catch(e){console.log("some things went wrong"),console.log(e)}}},920:(e,t,s)=>{const a=s(568);t.createCategory=async(e,t)=>{const{name:s,type:n}=e.body;if(!s||!n)return t.status(400).json({message:"Name or Type is missing"});try{const e=await a.create({name:s,type:n});t.status(201).json({category:e,message:"Successfully Created New Category"})}catch(e){t.status(400).json({message:e.message})}},t.getAllCategory=async(e,t)=>{try{const s=e.query.type.toLowerCase();if(!s)return t.status(400).json({message:"Invalid type"});if("income"===s||"expense"===s){const e=await a.find({type:s});t.status(200).json({categories:e})}else t.status(400).json({message:"Invalid type"})}catch(e){console.error("Error fetching categories:",e),t.status(500).json({error:"Internal server error"})}}},129:(e,t,s)=>{const a=s(339),n=s(68),r=s(155),o=s(542),{calculatePercentage:i,incomeCalculate:c,expenseCalculate:u,currentMonth:m,lastMonth:d}=s(904);e.exports={createTransaction:async(e,t)=>{const{name:s,type:n,category:r,amount:o}=e.body;try{const i=await a.create({creator:e.userId,name:s,type:n,category:r,amount:o});updatedTotalTransactions=await a.countDocuments({creator:e.userId}).exec(),t.status(201).json({transaction:i,totalTransactions:updatedTotalTransactions})}catch(e){t.status(400).json({message:e.message})}},getAllTransaction:async(e,t)=>{try{let s=e.query.search||"";s="string"==typeof s?s:"";const n=e.query.page,r=e.query.limit,o=(n-1)*r,i=e.query?.type,c={creator:e.userId};i?"all"===i?(await a.find(c),c.name={$regex:s,$options:"i"}):(c.name={$regex:s,$options:"i"},c.type=i):c.name={$regex:s,$options:"i"};const u=await a.find(c).skip(o).limit(r).sort({createdAt:-1}),m=await a.countDocuments(c);t.status(201).json({transactions:u,totalTransactions:m})}catch(e){t.status(400).json({message:e.message})}},getMonthlyTransactionSummary:async(e,t)=>{try{const s=e.userId;return t.status(200).json({data:await n(s,m)})}catch(e){t.status(400).json({message:e.message})}},getYearlyTransactionSummary:async(e,t)=>{try{return t.status(200).json({data:await r(e.userId)})}catch(e){t.status(400).json({message:e.message})}},getTransactionDetails:async(e,t)=>{try{const s=e.userId,a=await n(s,m),r=await n(s,d),l=c(r),g=u(r),y=l-g,h=c(a),p=u(a),$=h-p;if(a.length<=0&&r.length>0){const e={value:0,...i(l,0)};return o({res:t,message:{incomeDetail:e,expenseDetail:e,savedDetail:e},code:200})}if(a.length>0&&r.length<=0){const e=i(0,null);return o({res:t,message:{incomeDetail:{value:h,...e},expenseDetail:{value:p,...e},savedDetail:{value:$,...e}},code:200})}if(a.length<=0&&r.length<=0){const e={value:0,...i(0,0)};return o({res:t,message:{incomeDetail:e,expenseDetail:e,savedDetail:e},code:200})}if(a.length>0&&r.length>0)return o({res:t,message:{incomeDetail:{value:h,...i(l,h)},expenseDetail:{value:p,...i(g,p)},savedDetail:{value:$,...i(y,$)}},code:200})}catch(e){o({res:t,message:e.message,code:400})}},getCurrentMonthlyTransactionSummary:async(e,t)=>{try{const s=(await n(e.userId,m)).reduce(((e,t)=>e+t.dailyTotalTransactions),0);return t.status(200).json(s)}catch(e){t.status(400).json({message:e.message})}},editTransaction:async(e,t)=>{try{const{id:s}=e.params,n=e.body,r=await a.findByIdAndUpdate(s,n,{new:!0});if(!r)return t.status(404).json({message:"Transaction not found"});t.status(200).json({updatedTransaction:r})}catch(e){t.status(400).json({message:e.message})}},deleteTransaction:async(e,t)=>{try{const{id:s}=e.params;if(!await a.findByIdAndDelete(s))return t.status(404).json({message:"Transaction not found"});t.status(200).json({message:"Transaction deleted successfully"})}catch(e){t.status(400).json({message:e.message})}}}},847:(e,t,s)=>{const a=s(105),n=s(729),r=s(829),o=s(586);t.getAllUsers=async(e,t)=>{try{const e=await a.find().select("-hashed_password");t.json(e)}catch(e){t.status(500).json({message:e.message})}},t.getUser=async(e,t)=>{let s;try{if(s=await a.findById(e.userId).select("-hashed_password"),!s)return t.status(404).json({message:"Cannot find user"})}catch(e){return t.status(500).json({message:e.message})}t.status(200).json(s)},t.authenticate=async(e,t)=>{const{email:s,password:o}=e.body;if(!s||!o)return t.status(400).json({message:"Required field missing!"});try{const e=await a.findOne({email:s});if(!e)return t.status(404).json({message:"User not found!"});if(!await n.compare(o,e.hashed_password))return t.status(401).json({message:"Wrong Credentials!"});const i=r.sign({userId:e._id},process.env.JWT_ACCESS_TOKEN_SECRET,{expiresIn:"48h"});t.status(200).json({token:i})}catch(e){t.status(400).json({message:e.message})}},t.createUser=async(e,t)=>{const{name:s,email:r,password:o}=e.body;try{if(!r||!o||!s)return t.status(400).json({message:"Required field missing"});if(await a.findOne({email:r}))return t.status(409).json({message:"Email already in use!"});const e=await n.hash(o,10),i=await a.create({name:s,email:r,hashed_password:e});i.toJSON=function(){const e=this.toObject();return delete e.hashed_password,e},t.status(201).json(i)}catch(e){t.status(400).json({message:e.message})}},t.updateUser=async(e,t)=>{let s;try{if(s=await a.findById(e.userId),!s)return t.status(404).json({message:"Cannot find user"});if(e.body.name&&(s.name=e.body.name),e.body.email&&(s.email=e.body.email),e.file&&(s.image_url&&await o(s.image_url),s.image_url=e.file.path),e.body.password&&e.body.newPassword){if(!await n.compare(e.body.password,s.hashed_password))return t.status(401).json({message:"Invalid Credentials"});const a=await n.hash(e.body.newPassword,10);s.hashed_password=a}const r=await s.save();r.toJSON=function(){const e=this.toObject();return delete e.hashed_password,e},t.status(200).json({message:"Successfully updated.",user:r})}catch(e){t.status(400).json({message:e.message})}},t.deleteUser=async(e,t)=>{let s;try{if(s=await a.findById(e.userId),null==s)return t.status(404).json({message:"Cannot find user"})}catch(e){return t.status(500).json({message:e.message})}try{await s.remove(),t.json({message:"User deleted!"})}catch(e){t.status(500).json({message:e.message})}}},289:(e,t,s)=>{const a=s(829);e.exports={verifyToken:function(e,t,s){const n=e.header("Authorization");if(!n)return t.status(401).json({message:"Access denied"});try{const r=n.split(" ");if(2!==r.length||"Bearer"!==r[0])return t.status(401).json({message:"Invalid token format"});const o=r[1],i=a.verify(o,process.env.JWT_ACCESS_TOKEN_SECRET);e.userId=i.userId,s()}catch(e){t.status(401).json({message:"Invalid token"})}}}},698:(e,t,s)=>{const a=s(461),n=a.diskStorage({destination:(e,t,s)=>{s(null,"uploads/")},filename:(e,t,s)=>{s(null,`${Date.now()}-${t.originalname}`)}}),r=a({storage:n,limits:{fileSize:5242880},fileFilter:(e,t,s)=>{t.mimetype.startsWith("image/")?s(null,!0):s(new Error("Only image files are allowed!"))}});e.exports=r},568:(e,t,s)=>{const a=s(37),{Schema:n}=a,r=new n({name:{type:String,required:!0,trim:!0},type:{enum:["income","expense"],type:String,required:!0},createdAt:{type:Date,required:!0,default:Date.now}});e.exports=a.model("category",r)},339:(e,t,s)=>{const a=s(37),{Schema:n}=a,r=new n({creator:{type:n.Types.ObjectId,ref:"user"},name:{type:String,required:!0,trim:!0},type:{type:String,required:!0},category:{type:n.Types.ObjectId,required:!0,ref:"category"},amount:{type:String}},{timestamps:!0});r.static.countDocuments=function(e){return this.countDocuments(e).exec()},e.exports=a.model("transactions",r)},105:(e,t,s)=>{const a=s(37),n=new a.Schema({name:{type:String,required:!0,trim:!0},email:{type:String,required:!0},hashed_password:{type:String,required:!0},image_url:{type:String},currency:{name:{type:String,required:!0,trim:!0,default:"USD"},sign:{type:String,required:!0,trim:!0,default:"$"}}});e.exports=a.model("user",n)},880:(e,t,s)=>{const a=s(252).Router(),n=s(920);a.get("/",n.getAllCategory),a.post("/create",n.createCategory),e.exports=a},731:(e,t,s)=>{const a=s(252).Router(),{verifyToken:n}=s(289),{createTransaction:r,getAllTransaction:o,getYearlyTransactionSummary:i,getMonthlyTransactionSummary:c,getTransactionDetails:u,getCurrentMonthlyTransactionSummary:m,deleteTransaction:d,editTransaction:l}=s(129);a.post("/",n,r),a.get("/",n,o),a.get("/summary",i),a.get("/summary/yearly",n,i),a.get("/summary/monthly",n,c),a.get("/currentMonth/transactions",n,m),a.get("/total-details",n,u),a.put("/edit-transaction/:id",l),a.delete("/delete-transaction/:id",d),e.exports=a},101:(e,t,s)=>{const a=s(252).Router(),n=s(847),{verifyToken:r}=s(289),o=s(698);a.post("/",n.createUser),a.get("/",r,n.getUser),a.post("/authenticate",n.authenticate),a.put("/:id",n.updateUser),a.delete("/:id",n.deleteUser),a.put("/",r,o.single("image"),n.updateUser),a.get("/all",r,n.getAllUsers),a.delete("/",r,n.deleteUser),e.exports=a},586:(e,t,s)=>{const a=s(943);e.exports=async e=>{try{await a.unlink(e)}catch(e){console.error("Error deleting file:",e)}}},904:(e,t,s)=>{const{monthArr:a}=s(968),n=a[(new Date).getMonth()].monthName,r=a[(new Date).getMonth()-1].monthName;e.exports={currentMonth:n,lastMonth:r,incomeCalculate:function(e){return e.reduce(((e,t)=>e+t.income),0)},expenseCalculate:function(e){return e.reduce(((e,t)=>e+t.expense),0)},calculatePercentage:function(e,t){if(isNaN(e)||isNaN(t))throw new Error("Inputs must be numbers");if(0===e)return{percentage:"No Transactions found in last month"};if(t>e){const s=(t-e)/e*100;return{percentage:`+${Math.round(100*s)/100}% from last month`}}{const s=(e-t)/e*100;return{percentage:`-${Math.round(100*s)/100}% from last month`}}}}},542:e=>{e.exports=function({res:e,code:t,message:s}){const a=200!==t;e.status(t).json({...s,isError:a})}},729:e=>{"use strict";e.exports=require("bcryptjs")},577:e=>{"use strict";e.exports=require("cors")},818:e=>{"use strict";e.exports=require("dotenv")},252:e=>{"use strict";e.exports=require("express")},829:e=>{"use strict";e.exports=require("jsonwebtoken")},37:e=>{"use strict";e.exports=require("mongoose")},461:e=>{"use strict";e.exports=require("multer")},943:e=>{"use strict";e.exports=require("fs/promises")}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var r=t[a]={exports:{}};return e[a](r,r.exports,s),r.exports}(()=>{const e=s(577),t=s(252),a=s(818),n=s(442),r=s(101),o=s(731),i=s(880);a.config();const c=t(),u=process.env.PORT||5e3;c.use(e()),c.use(t.json()),n(),c.use("/api/v1/user",r),c.use("/api/v1/transaction",o),c.use("/api/v1/category",i),c.use("/uploads",t.static("uploads/")),c.listen(u,(()=>{console.log(`server is running http://localhost:${u}`)}))})()})();